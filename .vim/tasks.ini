# 定义一个新任务
[file-build]
command:c,cpp=mkdir bin && clang++ -O2 -Wall "$(VIM_FILEPATH)" -o "<root>/bin/$(VIM_FILENOEXT)" -lstdc++ -lm -msse3
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
output=quickfix
cwd=<root>
save=2

[file-build-and-run]
command="$(VIM_FILEPATH)"
command:c,cpp=mkdir bin && clang++ -O2 -Wall "$(VIM_FILEPATH)" -o "<root>/bin/$(VIM_FILENOEXT)" -lstdc++ -lm -msse3 && "<root>/bin/$(VIM_FILENOEXT)"
command:go=go build -o "$(VIM_PATHNOEXT)" "$(VIM_FILEPATH)" && "$(VIM_PATHNOEXT)"
command:python=python "$(VIM_FILENAME)"
command:make=make -f "$(VIM_FILENAME)" run
command:emake=emake -e "$(VIM_FILENAME)"
command:javascript=node "$(VIM_FILENAME)"
command:sh=sh "$(VIM_FILENAME)"
command:lua=lua "$(VIM_FILENAME)"
command:perl=perl "$(VIM_FILENAME)"
command:ruby=ruby "$(VIM_FILENAME)"
command:zsh=zsh "$(VIM_FILENAME)"
command:bash=bash "$(VIM_FILENAME)"
command:fish=fish "$(VIM_FILENAME)"
command:php=php "$(VIM_FILENAME)"
command:erlang=escript "$(VIM_FILENAME)"
command:ps1=powershell -file "$(VIM_FILENAME)"
command:scala=scala "$(VIM_FILENAME)"
command:haskell=ghci "$(VIM_FILENAME)"
command:applescript=osascript "$(VIM_FILENAME)"
command:vim=:source %
output=quickfix
cwd=<root>
save=2

[generate-compile-json]
command=mkdir build; cd build && cmake -DCMAKE_BUILD_TYPE=Debug .. && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && mv -f compile_commands.json ..
cwd=<root>
errorformat=

[project-build:debug]
command=mkdir build; cd build && cmake -DCMAKE_BUILD_TYPE=Debug .. && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && ln -s compile_commands.json .. ; make $(?task name)
cwd=<root>
errorformat=%f:%l:%m

[project-build:release]
command=mkdir build; cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && ln -s compile_commands.json ..; make $(?task name)
cwd=<root>
errorformat=%f:%l:%m

[project-build-and-run:debug]
command=mkdir build; cd build && cmake -DCMAKE_BUILD_TYPE=Debug .. && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && ln -s compile_commands.json .. ; make $(?task name) && <root>/bin/$(?task name)
cwd=<root>
errorformat=%f:%l:%m

[project-build-and-run:release]
command=mkdir build; cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && ln -s compile_commands.json .. ; make $(?task name) && <root>/bin/$(?task name)
cwd=<root>
errorformat=%f:%l:%m


[project-run]
command="build/$(VIM_PRONAME)"
cwd=<root>
output=quickfix
